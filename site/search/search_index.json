{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Testing for future open source UST docs Visit the BUG website to find out more. Useful links MkDocs User Guide Markdown Syntax Guide Strategy Create empty remote repo on github website Create empty local repo directory on laptop by typing mkdocs new <project_dir_name> Change directories cd project_dir_name Open local repo directory in a VScode terminal (terminal should always stay at the root) Clone remote repo to transform local repo into a git repo by copying the link and typing git clone <link> MkDocs will create a site directory that should not be tracked. Add this to .gitignore using echo \"site/\" >> .gitignore Add documentation using the following file structure: repo_name/ # Root directory (open terminal here) mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. about.md license.md img/ screenshot.png You can then reference images using a relative path e.g. ![screenshot](img/screenshot.png) Embed youtube videos by directly copying the HTML embed code into the markdown file. Preview the documentation locally using mkdocs serve , stop this using Ctrl + C MkDocs references what is on the remote repo, so it needs to be up to date before building and deploying the documentation: Add files for tracking git add . Commit changes git commit -m \"write_a_meaningful_message\" Push local changes to remote repo git push origin main Check success using git status Now simultaneously build and deploy the documentation using mkdocs gh-deploy","title":"Home"},{"location":"#testing-for-future-open-source-ust-docs","text":"Visit the BUG website to find out more.","title":"Testing for future open source UST docs"},{"location":"#useful-links","text":"MkDocs User Guide Markdown Syntax Guide","title":"Useful links"},{"location":"#strategy","text":"Create empty remote repo on github website Create empty local repo directory on laptop by typing mkdocs new <project_dir_name> Change directories cd project_dir_name Open local repo directory in a VScode terminal (terminal should always stay at the root) Clone remote repo to transform local repo into a git repo by copying the link and typing git clone <link> MkDocs will create a site directory that should not be tracked. Add this to .gitignore using echo \"site/\" >> .gitignore Add documentation using the following file structure: repo_name/ # Root directory (open terminal here) mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. about.md license.md img/ screenshot.png You can then reference images using a relative path e.g. ![screenshot](img/screenshot.png) Embed youtube videos by directly copying the HTML embed code into the markdown file. Preview the documentation locally using mkdocs serve , stop this using Ctrl + C MkDocs references what is on the remote repo, so it needs to be up to date before building and deploying the documentation: Add files for tracking git add . Commit changes git commit -m \"write_a_meaningful_message\" Push local changes to remote repo git push origin main Check success using git status Now simultaneously build and deploy the documentation using mkdocs gh-deploy","title":"Strategy"},{"location":"background/","text":"Background This is a page explaining the project background.","title":"Background"},{"location":"background/#background","text":"This is a page explaining the project background.","title":"Background"},{"location":"equipment/","text":"Equipment.md This gives an equipment list.","title":"Equipment"},{"location":"equipment/#equipmentmd","text":"This gives an equipment list.","title":"Equipment.md"}]}